/*  Once a student's request to be a TA for a module is accepted, 
    remove all of that student's other requests to be a TA for other modules
    This is to prevent student from being more than 1 TA per semester
    (not good for studies -_-") */
CREATE OR REPLACE FUNCTION remove_request()
RETURNS TRIGGER AS 
$content$ 
BEGIN
	IF NEW.is_ta = True THEN
		DELETE FROM teachingassistants WHERE sid = NEW.sid AND is_ta = False;
	END IF;
	RETURN NEW;
END; 
$content$
LANGUAGE plpgsql;
CREATE TRIGGER delete_ta
BEFORE INSERT ON teachingassistants
FOR EACH ROW
EXECUTE PROCEDURE remove_request();

/*After every new rating as long as rating > 0, then update is_rated = true */
CREATE OR REPLACE FUNCTION update_rated()
RETURNS TRIGGER AS $$ BEGIN
IF NEW.rating > 0 THEN
	NEW.is_rated = true;
ELSE 
	NEW.is_rated = false;
END IF;
RETURN NEW;
END;
$$LANGUAGE plpgsql;

CREATE TRIGGER update_rated
BEFORE UPDATE on takencourses
FOR EACH ROW EXECUTE PROCEDURE update_rated();

/* After a new thread is created, it also automatically becomes the first post of the thread, 
   since it is the thread topic for discussion. */
CREATE OR REPLACE FUNCTION add_post()
RETURNS TRIGGER AS 
$content$ 
BEGIN
	INSERT INTO Posts VALUES (NEW.fid, NEW.tid, 1, NEW.id, NEW.title, NEW.content, NEW.date_created, NULL, NULL, NULL, NULL);
	RETURN NULL;
END; 
$content$
LANGUAGE plpgsql;
CREATE TRIGGER new_thread
AFTER INSERT ON Threads
FOR EACH ROW
EXECUTE PROCEDURE add_post();
