/* Function: Allow Profs to find out the number of posts that each student makes*/ 
WITH forumsid AS 
( 
       SELECT forums.fid 
       FROM   forums, 
              professors 
       WHERE  professors.pid = forums.pid 
), 
studentid AS 
( 
       SELECT sid 
       FROM   students 
       EXCEPT 
       SELECT sid 
       FROM   teachingassistants 
) 
SELECT   Count(*) 
FROM     forumsid, 
         posts, studentid
WHERE    forumsid.fid = posts.fid, 
         forums.id = studentid.sid 
GROUP BY(posts.id);

/*Function: Show the number of students of each grade for each module*/
WITH courseid 
     AS (SELECT * 
         FROM   takencourses), 
     grade 
     AS (SELECT cid, 
                grade, 
                Count(courseid.grade) 
         FROM   (SELECT * 
                 FROM   takencourses) AS courseid 
         GROUP  BY courseid.grade, 
                   courseid.cid) 
SELECT * FROM   grade;

/* Function: Display the average grade received by students for a module in a particular semester */ 
With studentGrades(sid, cid, year,sem, grade) AS
(SELECT sid, cid, year, sem, CASE 
	WHEN grade = 'A+' then 5.0
	WHEN grade = 'A'  then 5.0
	WHEN grade = 'A-' then 4.5
	WHEN grade = 'B+' then 4.0
	WHEN grade = 'B'  then 3.5
	WHEN grade = 'B-' then 3.0
	WHEN grade = 'C+' then 2.5
	WHEN grade = 'D+' then 1.5
	WHEN grade = 'D'  then 1.0
	WHEN grade = 'F'  then 0
END AS numGrade
FROM takencourses
WHERE grade IS NOT NULL
GROUP BY sid,cid, year, sem)

SELECT cid, year, sem, ROUND(AVG(grade),4)
FROM studentGrades
GROUP BY cid, year, sem;

/* Function: Display the average grade of students under a TA, a performance indicator */
/* currently no information on tutorial teaching which group */

With studentGrades(sid, cid, year,sem, grade) AS
(SELECT sid, cid, year, sem, CASE 
	WHEN grade = 'A+' then 5.0
	WHEN grade = 'A'  then 5.0
	WHEN grade = 'A-' then 4.5
	WHEN grade = 'B+' then 4.0
	WHEN grade = 'B'  then 3.5
	WHEN grade = 'B-' then 3.0
	WHEN grade = 'C+' then 2.5
	WHEN grade = 'D+' then 1.5
	WHEN grade = 'D'  then 1.0
	WHEN grade = 'F'  then 0
END AS numGrade
FROM takencourses
WHERE grade IS NOT NULL
GROUP BY cid, year, sem)

SELECT Managed.sid AS tutor, cid, year, sem, AVG(grade) as averageGrade
FROM (Managed LEFT JOIN Groups ON  Managed.cid = Groups.cid) LEFT JOIN studentGrades ON studentGrades.sid;
